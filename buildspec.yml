version: 0.2

phases:
  pre_build:
    on-failure: ABORT
    commands:
    - COMMIT=`git rev-parse --short HEAD`
    - TAG=`git describe --tags --exact-match 2> /dev/null || echo ''`
    - |
      if [[ "$MODE" == "OnPush" ]]
      then
        BRANCHTAG=`git describe --tags --exact-match 2> /dev/null || git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || git rev-parse --short HEAD`
      else
        BRANCHTAG=$BRANCHNAME
      fi
    - DOCKTAG=$BRANCHTAG
    - COMMITDATE=`git --no-pager log -1 --pretty='format:%cd' --date='format:%Y-%m-%d %H:%M:%S'`
    - echo "Branchtag ${BRANCHTAG}; COMMITDATE=${COMMITDATE}; REPONAME=${REPONAME}; BRANCHNAME=${BRANCHNAME}"
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${ECR_REGISTRY}

  post_build:
    on-failure: CONTINUE
    commands:
    # - zip -r mrt-admin-sinatra.zip vendor app *.rb *.yml
    # - aws s3 cp mrt-admin-sinatra.zip s3://${S3PRIVBUCKET}/deploy/
    - |
      docker build --quiet --push \
        --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
        -t ${ECR_REGISTRY}/mrt-admin-sinatra .
    - |
      aws lambda update-function-code \
        --function-name mrt-admin-sinatra \
        --image-uri ${ECR_REGISTRY}/mrt-admin-sinatra:latest \
        --no-cli-pager
    - |
      aws lambda update-function-code \
        --function-name mrt-admin-sinatra-no-vpc \
        --image-uri ${ECR_REGISTRY}/mrt-admin-sinatra:latest \
        --no-cli-pager
    - |
      aws ecs update-service --cluster mrt-ecs-stack --service admintool \
       --desired-count 2 --output yaml --no-cli-pager \
       --force-new-deployment || echo "Skip ECS Deployment"
    - |
      cd present/deploy
      docker pull ${ECR_REGISTRY}/docker-hub/webpronl/reveal-md --quiet
      docker-compose -f docker-compose-static.yml up
      aws s3 rm --recursive s3://${S3CFBUCKET}/present/ecs-deploy || echo 'delete skipped'
      aws s3 cp --recursive $1 s3://${S3CFBUCKET}/present/ecs-deploy
      aws s3 cp --recursive images s3://${S3CFBUCKET}/present/ecs-deploy/images

      aws cloudfront create-invalidation --distribution-id ${CFDISTRIBUTIONID} --paths /present/ecs-deploy/* --region us-east-1