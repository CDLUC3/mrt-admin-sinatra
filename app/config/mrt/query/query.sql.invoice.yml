queries:
  /queries/repository/campus/invoices:
    description: |
      The Merritt Invoice report calculates the Merritt recharge for each campus.  

      The report accounts for the significant recharge calculations that were implemented in FY2019, 
      including the 10TB storage allocation made available to each main campus library free of recharge.
    totals: true
    sql: |
      WITH fyear as
        (select concat(?,'-07-01') as start),
      fyend as
        (select date_add(fyear.start, INTERVAL 1 YEAR) as end from fyear),
      fydates as (
        select
          fyear.start,
          fyend.end,
          ifnull(max(billing_totals_date), fyend.end) as dytd
        from
          daily_billing,
          fyear, 
          fyend
        where
          billing_totals_date < fyend.end
      )
      select
        own_name,
        mnemonic,
        (
          select
            ifnull(avg(billable_size) / 1000000000.0, 0)
          from
            daily_billing db,
            fydates
          where
            c.inv_collection_id = db.inv_collection_id
          and
            c.inv_owner_id = db.inv_owner_id
          and
            billing_totals_date = fydates.start
        ) as start_size_gb,
        (
          select
            ifnull(avg(billable_size) / 1000000000.0, 0)
          from
            daily_billing db,
            fydates
          where
            c.inv_collection_id = db.inv_collection_id
          and
            c.inv_owner_id = db.inv_owner_id
          and
            billing_totals_date = fydates.dytd
        ) as ytd_size_gb,
        (
          select
            ifnull(avg(billable_size)  / 1000000000.0, 0)
          from
            daily_billing db,
            fydates
          where
            c.inv_collection_id = db.inv_collection_id
          and
            c.inv_owner_id = db.inv_owner_id
          and
            billing_totals_date = date_add(fydates.end, interval -1 day)
        ) as end_size_gb,
        (
          select ytd_size_gb - start_size_gb
        ) as diff_size_gb,
        (
          select
            count(billable_size)
          from
            daily_billing db,
            fydates
          where
            c.inv_collection_id = db.inv_collection_id
          and
            c.inv_owner_id = db.inv_owner_id
          and
            billing_totals_date >= fydates.start
          and
            billing_totals_date <= fydates.dytd
        ) as days_available,
        (
          select if(datediff(fydates.end, fydates.dytd) = 0, 0, datediff(fydates.end, fydates.dytd) - 1)
          from fydates
        ) as days_projected,
        (
          select
            avg(billable_size) / 1000000000.0
          from
            daily_billing db,
            fydates
          where
            c.inv_collection_id = db.inv_collection_id
          and
            c.inv_owner_id = db.inv_owner_id
          and
            billing_totals_date >= fydates.start
          and
            billing_totals_date <= fydates.dytd
        ) as average_available_gb,
        (
          select
            (
              (average_available_gb * days_available) + 
              (ytd_size_gb * days_projected)
            ) / datediff(fydates.end, fydates.start)
            from fydates
        ) as daily_average_projected_gb,
        (
          select daily_average_projected_gb * 365
        ) as size,
        (
          select size * 0.000410959
        ) as cost
      from
        owner_collections c
      where
        ogroup like ?
      union
      select
        'ZZ Campus 10TB Discount' as own_name,
        null as mnemonic,
        null as start_size_gb,
        null as ytd_size_gb,
        null as end_size_gb,
        null as diff_size_gb,
        null as days_available,
        null as days_projected,
        null as average_available_gb,
        null as daily_average_projected_gb,
        null as size,
        -1500.0 as cost
      order by 
        own_name,
        mnemonic
    parameters:
    - name: year
      type: integer
    - name: campus
      type: string
  