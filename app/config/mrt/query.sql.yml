fragments:
  COLLQ: |
    select
      c.id inv_collection_id,
      mnemonic,
      ark collection_ark,
      name,
      count(*) num_objs,
      inio.role as role,
      n.number as node_number,
      n.description as node_description
    from
      inv.inv_collections c
    inner join inv.inv_collections_inv_objects icio
      on c.id = icio.inv_collection_id
    inner join inv.inv_nodes_inv_objects inio
      on icio.inv_object_id = inio.inv_object_id
    inner join inv.inv_nodes n
      on inio.inv_node_id = n.id
    {{{WHERE}}}
    group by
      inv_collection_id,
      mnemonic,
      collection_ark,
      name,
      role,
      node_number,
      node_description
  OBJQ: |
    {{{OBJQPRE}}}
    {{{WHERE}}}
    {{{OBJQPOST}}} 
  OBJSUBQ: |
    {{{OBJQPRE}}}
    where exists (
      select 1
      from (
        {{{SUBWHERE}}}
        limit 25
      ) as q
      where q.inv_object_id = o.id
    )
    {{{OBJQPOST}}} 
  OBJQPRE: |
    select
      o.id inv_object_id,
      o.ark,
      o.version_number,
      group_concat(c.mnemonic) as mnemonics,
      own.name,
      erc_what,
      erc_who,
      erc_when,
      (select group_concat(local_id) from inv.inv_localids loc where loc.inv_object_ark = o.ark and loc.inv_owner_ark = own.ark) as local_ids,
      o.created,
      billable_size,
      file_count
    from
      inv.inv_objects o
    left join inv.inv_collections_inv_objects icio
      on o.id = icio.inv_object_id
    left join inv.inv_collections c
      on icio.inv_collection_id = c.id
    left join inv.inv_owners own
      on o.inv_owner_id = own.id
    left join billing.object_size os 
      on o.id = os.inv_object_id
  OBJQPOST: |
    group by
      inv_object_id,
      o.ark,
      o.version_number,
      own.name,
      erc_what,
      erc_who,
      erc_when,
      created,
      billable_size,
      file_count
    order by o.id desc
      limit 10
  OBJFILES: |
    select
      o.ark,
      v.number,
      (
        select max(vv.number)
        from inv.inv_files ff
        inner join inv.inv_versions vv
          on ff.inv_version_id = vv.id
        where
          ff.inv_object_id = o.id
        and exists (
          select 1 where ff.pathname=f.pathname
        )
      ) as maxv,
      f.source,
      binary f.pathname,
      f.full_size,
      f.created,
      ifnull(group_concat(n.number), '') as nodelist,
      ifnull(
        group_concat(
          case
            when a.status = 'verified' then null
            else n.number
          end
        ),
        ''
      ) as unverified
    from
      inv.inv_objects o
    inner join inv.inv_versions v
      on o.id = v.inv_object_id
    inner join inv.inv_files f
      on o.id = f.inv_object_id
      and v.id = f.inv_version_id
    left join inv.inv_audits a
      on
        o.id = a.inv_object_id
      and
        f.id = a.inv_file_id
    left join inv.inv_nodes n
      on a.inv_node_id = n.id
    {{{WHERE}}}
    and
      f.billable_size = f.full_size
    group by
      o.ark,
      v.number,
      f.source,
      binary f.pathname,
      f.full_size,
      f.created
    order by
      f.created desc,
      source,
      pathname
    limit 2000
  OBJREPL: |
    select
      nn.role,
      nn.node_id,
      nn.node_number,
      nn.description,
      nn.access_mode,
      nn.created,
      nn.replicated,
      (
        select count(*) from inv.inv_audits a
        where a.inv_object_id = nn.inv_object_id and a.inv_node_id=nn.node_id and status != 'verified'
      ) as unverified,
      (
        select max(verified) from inv.inv_audits a
        where a.inv_object_id = nn.inv_object_id and a.inv_node_id=nn.node_id
      ) as last_verified,
      nn.version_number
    from (
      select
        inio.role,
        n.id node_id,
        n.number node_number,
        n.description,
        n.access_mode,
        o.created,
        inio.created as replicated,
        o.id as inv_object_id,
        o.ark as ark,
        o.version_number
      from
        inv.inv_objects o
      inner join inv.inv_nodes_inv_objects inio
        on o.id = inio.inv_object_id
      inner join inv.inv_nodes n
        on inio.inv_node_id = n.id
      {{{WHERE}}}
    ) as nn
  OBJREPLQLIST:
    where exists (
      select
        1
      from (
        select
          inio.inv_object_id,
          min(created) as init_created
        from
          inv.inv_nodes_inv_objects inio
        inner join (
          select
            inv_object_id,
            count(*)
          from
            inv.inv_nodes_inv_objects
          group by
            inv_object_id
          having
            count(*) = {{{COPIES}}}
        ) as copies
        on copies.inv_object_id = inio.inv_object_id
         group by
          inv_object_id
      ) as age      
      where
        age.init_created < date_add(now(), INTERVAL -? DAY)
      and 
        age.inv_object_id = o.id
    )
  FILEREPLQLIST:
    where exists (
      select
        1
      from (
        select
          a.inv_object_id,
          a.inv_file_id,
          min(created) as init_created
        from
          inv.inv_audits a
        inner join (
          select
            inv_file_id,
            count(*)
          from
            inv.inv_audits
          group by
            inv_file_id
          having
            count(*) = {{{COPIES}}}
        ) as copies
          on copies.inv_file_id = a.inv_file_id
        group by
          inv_object_id,
          inv_file_id
      ) as age      
      where
        age.init_created < date_add(now(), INTERVAL -? DAY)
      and 
        age.inv_object_id = o.id
    )
  REPSQL: |
    select
      case
        when ifnull(c.mnemonic, '') = '' then 'No Mnemonic'
        when c.name = 'Merritt curatorial classes' then 'Stage Exception'
        else 'Default'
      end as category,
      count(*) as num_objs,
      ifnull(
        sum(
          case
            when age.init_created < date_add(now(), INTERVAL -2 DAY) then 1
            else 0
          end
        ),
        0
      ) as num_objs_2day,
      ifnull(
        sum(
          case
            when age.init_created < date_add(now(), INTERVAL -2 DAY) then 0
            when age.init_created < date_add(now(), INTERVAL -1 DAY) then 1
            else 0
          end
        ),
        0
      ) as num_objs_1day,
      ifnull(
        sum(
          case
            when age.init_created < date_add(now(), INTERVAL -2 DAY) then 0
            when age.init_created < date_add(now(), INTERVAL -1 DAY) then 0
            else 1
          end
        ),
        0
      ) as num_objs_0day,
      case
        when count(*) = 0 then 'PASS'
        when {{{COPIES}}} = 3 then 'PASS'
        when ifnull(
          sum(
            case
              when age.init_created < date_add(now(), INTERVAL -2 DAY) then 1
              else 0
            end
          ),
          0
        ) > 0 then
          case
            when c.mnemonic = 'oneshare_dataup' then 'INFO'
            when c.mnemonic = 'dataone_dash' then 'INFO'
            when ifnull(c.mnemonic, '') = '' then 'INFO'
            when {{{COPIES}}} != 2 then 'FAIL'
            else 'FAIL'
          end
        when ifnull(
          sum(
            case
              when age.init_created < date_add(now(), INTERVAL -2 DAY) then 0
              when age.init_created < date_add(now(), INTERVAL -1 DAY) then 1
              else 0
            end
          ),
          0
        ) > 0 then 'WARN'
        else 'PASS'
      end as status
      from (
        select
          inio.inv_object_id,
          min(created) as init_created
        from
          inv.inv_nodes_inv_objects inio
        inner join (
          select
            inv_object_id,
            count(*)
          from
            inv.inv_nodes_inv_objects
          group by
            inv_object_id
          having
            count(*) = {{{COPIES}}}
        ) as copies
        on copies.inv_object_id = inio.inv_object_id
        group by
          inv_object_id
      ) as age      
      inner join inv.inv_collections_inv_objects icio
        on age.inv_object_id = icio.inv_object_id
      inner join inv.inv_collections c
        on icio.inv_collection_id = c.id
      inner join inv.inv_objects o
        on c.inv_object_id = o.id and o.aggregate_role = 'MRT-collection'
      group by
        category
  REPSQLFILE: |
    select
      case
        when ifnull(c.mnemonic, '') = ''
          then 'No Mnemonic'
        when age.inv_object_id = (
          select -1 /*id from inv.inv_objects where ark = '...'*/
        )
          then '...'
        when c.name = 'Merritt curatorial classes'
          then 'Stage Exception'
        else
          'Default'
      end as category,
      count(*),
      ifnull(
        sum(
          case
            when age.init_created < date_add(now(), INTERVAL -2 DAY)
              then 1
            else 0
          end
        ),
        0
      ) as num_objs_2day,
      ifnull(
        sum(
          case
            when age.init_created < date_add(now(), INTERVAL -2 DAY)
              then 0
            when age.init_created < date_add(now(), INTERVAL -1 DAY)
              then 1
            else 0
          end
        ),
        0
      ) as num_objs_1day,
      ifnull(
        sum(
          case
            when age.init_created < date_add(now(), INTERVAL -2 DAY)
              then 0
            when age.init_created < date_add(now(), INTERVAL -1 DAY)
              then 0
            else 1
          end
        ),
        0
      ) as num_objs_0day,
      case
        when count(*) = 0 then 'PASS'
        when {{{COPIES}}} = 3 then 'PASS'
        when ifnull(
          sum(
            case
              when age.init_created < date_add(now(), INTERVAL -2 DAY)
                then 1
              else 0
            end
          ),
          0
        ) > 0 then
          case
            when c.mnemonic = 'oneshare_dataup' then 'INFO'
            when c.mnemonic = 'dataone_dash' then 'INFO'
            when ifnull(c.mnemonic, '') = '' then 'INFO'
            when {{{COPIES}}} != 2 then 'FAIL'
            else 'FAIL'
          end
        when ifnull(
          sum(
            case
              when age.init_created < date_add(now(), INTERVAL -2 DAY)
                then 0
              when age.init_created < date_add(now(), INTERVAL -1 DAY)
                then 1
              else 0
            end
          ),
          0
        ) > 0 then 'WARN'
        else 'PASS'
      end as status
    from (
      select
        a.inv_object_id,
        a.inv_file_id,
        min(created) as init_created
      from
        inv.inv_audits a
      inner join (
        select
          inv_file_id,
          count(*)
        from
          inv.inv_audits
        group by
          inv_file_id
        having
          count(*) = {{{COPIES}}}
      ) as copies
        on copies.inv_file_id = a.inv_file_id
      group by
        inv_object_id,
        inv_file_id
    ) as age
    inner join inv.inv_collections_inv_objects icio
      on age.inv_object_id = icio.inv_object_id
    inner join inv.inv_collections c
      on icio.inv_collection_id = c.id
    inner join inv.inv_objects o
      on c.inv_object_id = o.id and o.aggregate_role = 'MRT-collection'
    group by
      category
  MIME:
    select
      distinct
        ogroup,
        inv_collection_id,
        mnemonic,
        collection_name,
        mime_group,
        mime_type,
        sum(count_files) files,
        sum(billable_size) size
    from
      owner_coll_mime_use_details
    {{{WHERE}}}
    group by
      ogroup,
      inv_collection_id,
      mnemonic,
      collection_name,
      mime_group,
      mime_type
    order by
      ogroup,
      mnemonic
  MULTCOLL:
    where o.id in (
      select
        inv_object_id
      from
        inv.inv_collections_inv_objects
      group by
        inv_object_id
      having
        count(*) > 1
    )
    and
      o.aggregate_role = 'MRT-none'
  MULTCOLLQ:
    select
      year(o.created) as year,
      count(*) as count,
      case
        when year(now()) - year(o.created) <= 1 then 'WARN'
        else 'SKIP'
      end as status
    from
      inv.inv_objects o
    {{{MULTCOLL}}}
    group by
      year
  VERCLOBBER: |
    select
      inv_object_id,
      number,
      count(*)
    from
      inv.inv_versions
    group by
      inv_object_id,
      number
    having
      count(*) > 1
  YEARS: |
    select distinct 
      date_add(
        date(created), 
        INTERVAL -(dayofyear(created)) + 1 DAY
      ) start,
      date_add(
        date_add(
          date(created), 
          INTERVAL -(dayofyear(created)) + 1 DAY
        ), 
        INTERVAL +1 YEAR
      ) end 
    from inv.inv_objects 
    order by start
  CUMLYEARS: |
    select distinct 
      date_add(
        date_add(
          date_add(
            date_add(date(created), INTERVAL +6 MONTH), 
            INTERVAL -(dayofyear(date_add(date(created), INTERVAL +6 MONTH))) + 1 DAY
          ), 
          INTERVAL -1 YEAR
        ),
        INTERVAL +6 MONTH
      ) start,
      date_add(
        date_add(
          date_add(
            date_add(date(created), INTERVAL +6 MONTH), 
            INTERVAL -(dayofyear(date_add(date(created), INTERVAL +6 MONTH))) + 1 DAY
          ), 
          INTERVAL -1 YEAR
        ),
        INTERVAL +18 MONTH
      ) end
    from inv.inv_objects 
    union
    select distinct 
      date_add(
        date_add(
          date_add(
            date_add(date(max(created)), INTERVAL +6 MONTH), 
            INTERVAL -(dayofyear(date_add(date(max(created)), INTERVAL +6 MONTH))) + 1 DAY
          ), 
          INTERVAL -1 YEAR
        ),
        INTERVAL +18 MONTH
      ) start,
      date_add(
        date_add(
          date_add(
            date_add(date(max(created)), INTERVAL +6 MONTH), 
            INTERVAL -(dayofyear(date_add(date(max(created)), INTERVAL +6 MONTH))) + 1 DAY
          ), 
          INTERVAL -1 YEAR
        ),
        INTERVAL +30 MONTH
      ) end
    from inv.inv_objects 
    union
    select distinct 
      date_add(
        date_add(
          date_add(
            date_add(date(max(created)), INTERVAL +6 MONTH), 
            INTERVAL -(dayofyear(date_add(date(max(created)), INTERVAL +6 MONTH))) + 1 DAY
          ), 
          INTERVAL -1 YEAR
        ),
        INTERVAL +30 MONTH
      ) start,
      date_add(
        date_add(
          date_add(
            date_add(date(max(created)), INTERVAL +6 MONTH), 
            INTERVAL -(dayofyear(date_add(date(max(created)), INTERVAL +6 MONTH))) + 1 DAY
          ), 
          INTERVAL -1 YEAR
        ),
        INTERVAL +42 MONTH
      ) end
    from inv.inv_objects 
    order by start
  WEEKS: |
    select 
      date_add(date(now()), INTERVAL -dayofweek(date(now())) +1 -21 DAY) start,
      date_add(date(now()), INTERVAL -dayofweek(date(now())) +8 -21 DAY) end
    union
    select 
      date_add(date(now()), INTERVAL -dayofweek(date(now())) +1 -14 DAY) start,
      date_add(date(now()), INTERVAL -dayofweek(date(now())) +8 -14 DAY) end
    union
    select 
      date_add(date(now()), INTERVAL -dayofweek(date(now())) +1 -7 DAY) start,
      date_add(date(now()), INTERVAL -dayofweek(date(now())) +8 -7 DAY) end
    union
    select 
      date_add(date(now()), INTERVAL -dayofweek(date(now())) +1 DAY) start,
      date_add(date(now()), INTERVAL -dayofweek(date(now())) +8 DAY) end
  COLLTOTAL: |
    select
      ogroup,
      inv_collection_id,
      mnemonic,
      collection_name,
      {{#RANGE}}
      (
        select 
          {{{FIELD}}} 
        from 
          billing.owner_coll_mime_use_details ocmud
        where 
          ocmud.inv_collection_id = oc.inv_collection_id 
        and 
          ocmud.date_added >= '{{start}}'
        and 
          ocmud.date_added < '{{end}}'
        and
          source = 'producer'
      ) as '{{start}}',
      {{/RANGE}}
      '' as blank
    from 
      billing.owner_collections oc
    where 
    (
      select 
        {{{FIELD}}} 
      from 
        billing.owner_coll_mime_use_details ocmud
      where 
        ocmud.inv_collection_id = oc.inv_collection_id
      {{{FILTER}}}
    ) > 0
    group by 
      ogroup,
      inv_collection_id,
      mnemonic,
      collection_name
    order by 
      ogroup,
      inv_collection_id,
      mnemonic,
      collection_name
  COLLTOTALCUML: |
    select
      ogroup,
      inv_collection_id,
      mnemonic,
      collection_name,
      {{#RANGE}}
      (
        select 
          {{{FIELD}}}
        from 
          billing.owner_coll_mime_use_details ocmud
        where 
          ocmud.inv_collection_id = oc.inv_collection_id 
        and 
          ocmud.date_added < '{{end}}'
        and
          source = 'producer'
      ) + (
        select
          greatest(0, datediff('{{end}}', now())) * {{{FIELD}}} / 730
        from
          owner_coll_mime_use_details ocmud
        where
          oc.ogroup = ocmud.ogroup
        and
          oc.inv_collection_id = ocmud.inv_collection_id
        and
          date_added >= date_add(now(), interval - 730 day)
        and source='producer'
      ) as '{{end}}',
      {{/RANGE}}
      '' as blank
    from 
      billing.owner_collections oc
    where 
    (
      select 
        {{{FIELD}}} 
      from 
        billing.owner_coll_mime_use_details ocmud
      where 
        ocmud.inv_collection_id = oc.inv_collection_id
    ) > 0
    group by 
      ogroup,
      inv_collection_id,
      mnemonic,
      collection_name
    order by 
      ogroup,
      inv_collection_id,
      mnemonic,
      collection_name
queries:
  /queries/repository/campus:
    totals: true
    sql: |
      select
        distinct
        ogroup as campus,
        count(distinct inv_collection_id) num_colls,
        sum(count_files) files,
        sum(billable_size) size
      from
        owner_coll_mime_use_details ocmud
      group by
        ogroup
      order by
        ogroup
  /queries/repository/campus-objects:
    totals: true
    sql: |
      select
        distinct
        ogroup as campus,
        count(distinct inv_collection_id) num_colls,
        sum(count_objects) num_objs
      from
        owner_collections_objects
      group by
        ogroup
      order by
        ogroup
  /queries/repository/collections:
    totals: true
    sql: |
      select
        distinct
        ogroup,
        inv_collection_id,
        mnemonic,
        collection_name,
        sum(count_files) files,
        sum(billable_size) size
      from
        owner_coll_mime_use_details
      group by
        ogroup,
        inv_collection_id,
        mnemonic,
        collection_name
      order by
        ogroup,
        mnemonic
  /queries/repository/collection:
    sql: |
      {{{COLLQ}}}
    template-params:
      WHERE: where c.id = ?
    parameters:
    - name: inv_collection_id
      type: integer
  /queries/repository/collection-mnemonic:
    sql: |
      {{{COLLQ}}}
    template-params:
      WHERE: where c.mnemonic = ?
    parameters:
    - name: mnemonic
      type: string
  /queries/repository/object:
    sql: |
      {{{OBJQ}}}
    template-params:
      WHERE: where o.id = ?
    files_sql: |
      {{{OBJFILES}}}
    repl_sql: |
      {{{OBJREPL}}}
    parameters:
    - name: inv_object_id
      type: integer
  /queries/repository/object-ark:
    sql: |
      {{{OBJQ}}}
    template-params:
      WHERE: where o.ark = ?
    files_sql: |
      {{{OBJFILES}}}
    repl_sql: |
      {{{OBJREPL}}}
    parameters:
    - name: ark
      type: string
  /queries/repository/objects:
    sql: |
      {{{OBJQ}}}
    template-params:
      WHERE: |
        where o.id >= (select max(id)-10 from inv.inv_objects)
  /queries/repository/objects-localid:
    sql: |
      {{{OBJQ}}}
    template-params:
      WHERE: |
        where exists (
          select 1 from inv.inv_localids loc
          where loc.inv_object_ark = o.ark
          and loc.local_id = ?
        )
    parameters:
    - name: localid
      type: string
  /queries/repository/objects-erc-who:
    sql: |
      {{{OBJQ}}}
    template-params:
      WHERE: |
        where o.erc_who like ?
    parameters:
    - name: term
      type: string
  /queries/repository/objects-erc-what:
    sql: |
      {{{OBJQ}}}
    template-params:
      WHERE: |
        where o.erc_what like ?
    parameters:
    - name: term
      type: string
  /queries/repository/objects-erc-when:
    sql: |
      {{{OBJQ}}}
    template-params:
      WHERE: |
        where o.erc_when like ?
    parameters:
    - name: term
      type: string
  /queries/repository/objects-by-filename:
    sql: |
      {{{OBJQ}}}
    template-params:
      WHERE: |
        where exists (
          select 1 from inv.inv_files f
          where pathname like ?
          and f.inv_object_id = o.id
        )
    parameters:
    - name: term
      type: string
  /queries/repository/objects-by-container:
    sql: |
      {{{OBJQ}}}
    template-params:
      WHERE: |
        where exists (
          select 1 from inv.inv_ingests ing
          where filename = ?
          and ing.inv_object_id = o.id
        )
    parameters:
    - name: term
      type: string
  /queries/repository/collections-objects:
    totals: true
    sql: |
      select
        distinct
        ogroup,
        inv_collection_id,
        (select mnemonic from inv.inv_collections where id=inv_collection_id) mnemonic,
        collection_name,
        sum(count_objects) num_objs
      from
        owner_collections_objects
      group by
        ogroup,
        inv_collection_id,
        mnemonic,
        collection_name
      order by
        ogroup,
        mnemonic
  /queries/repository/owners:
    totals: true
    sql: |
      select
          ogroup,
          inv_owner_id as owner_id,
          own_name,
          (select ark from inv.inv_owners where id=inv_owner_id) owner_ark,
          sum(count_files) files,
          sum(billable_size) size
        from
          owner_coll_mime_use_details
        group by
          ogroup,
          owner_id,
          own_name
        order by
          ogroup,
          own_name
  /queries/consistency/replication/objects-2:
    description: |
      - [Object List: Older than 2 days](/queries/consistency/replication/objects-2/objlist?days=2)
      - [Object List: Older than 1 day](/queries/consistency/replication/objects-2/objlist?days=1)
      - [Object List: Any time](/queries/consistency/replication/objects-2/objlist?days=0)
    template-params:
      COPIES: 2
    totals: true
    sql: |
      {{{REPSQL}}}
  /queries/consistency/replication/objects-2/objlist:
    template-params:
      COPIES: 2
    totals: true
    sql: |
      {{{OBJQPRE}}}
      {{{OBJREPLQLIST}}}
      {{{OBJQPOST}}}
    parameters:
    - name: days
      type: integer
  /queries/consistency/replication/objects-1:
    description: |
      - [Object List: Older than 2 days](/queries/consistency/replication/objects-1/objlist?days=2)
      - [Object List: Older than 1 day](/queries/consistency/replication/objects-1/objlist?days=1)
      - [Object List: Any time](/queries/consistency/replication/objects-1/objlist?days=0)
    template-params:
      COPIES: 1
    totals: true
    sql: |
      {{{REPSQL}}}
  /queries/consistency/replication/objects-1/objlist:
    template-params:
      COPIES: 1
    totals: true
    sql: |
      {{{OBJQPRE}}}
      {{{OBJREPLQLIST}}}
      {{{OBJQPOST}}}
    parameters:
    - name: days
      type: integer
  /queries/consistency/replication/objects-4:
    description: |
      - [Object List: Older than 2 days](/queries/consistency/replication/objects-4/objlist?days=2)
      - [Object List: Older than 1 day](/queries/consistency/replication/objects-4/objlist?days=1)
      - [Object List: Any time](/queries/consistency/replication/objects-4/objlist?days=0)
    template-params:
      COPIES: 4
    totals: true
    sql: |
      {{{REPSQL}}}
  /queries/consistency/replication/objects-4/objlist:
    template-params:
      COPIES: 4
    totals: true
    sql: |
      {{{OBJQPRE}}}
      {{{OBJREPLQLIST}}}
      {{{OBJQPOST}}}
    parameters:
    - name: days
      type: integer
  /queries/consistency/replication/files-2:
    description: |
      - [Object List: Older than 2 days](/queries/consistency/replication/files-2/objlist?days=2)
      - [Object List: Older than 1 day](/queries/consistency/replication/files-2/objlist?days=1)
      - [Object List: Any time](/queries/consistency/replication/files-2/objlist?days=0)
    template-params:
      COPIES: 2
    totals: true
    sql: |
      {{{REPSQLFILE}}}
  /queries/consistency/replication/files-2/objlist:
    template-params:
      COPIES: 2
    totals: true
    sql: |
      {{{OBJQPRE}}}
      {{{FILEREPLQLIST}}}
      {{{OBJQPOST}}}
    parameters:
    - name: days
      type: integer
  /queries/consistency/replication/files-1:
    description: |
      - [Object List: Older than 2 days](/queries/consistency/replication/files-1/objlist?days=2)
      - [Object List: Older than 1 day](/queries/consistency/replication/files-1/objlist?days=1)
      - [Object List: Any time](/queries/consistency/replication/files-1/objlist?days=0)
    template-params:
      COPIES: 1
    totals: true
    sql: |
      {{{REPSQLFILE}}}
  /queries/consistency/replication/files-1/objlist:
    template-params:
      COPIES: 1
    totals: true
    sql: |
      {{{OBJQPRE}}}
      {{{FILEREPLQLIST}}}
      {{{OBJQPOST}}}
    parameters:
    - name: days
      type: integer
  /queries/consistency/replication/files-4:
    description: |
      - [Object List: Older than 2 days](/queries/consistency/replication/files-4/objlist?days=2)
      - [Object List: Older than 1 day](/queries/consistency/replication/files-4/objlist?days=1)
      - [Object List: Any time](/queries/consistency/replication/files-4/objlist?days=0)
    template-params:
      COPIES: 4
    totals: true
    sql: |
      {{{REPSQLFILE}}}
  /queries/consistency/replication/files-4/objlist:
    template-params:
      COPIES: 4
    totals: true
    sql: |
      {{{OBJQPRE}}}
      {{{FILEREPLQLIST}}}
      {{{OBJQPOST}}}
    parameters:
    - name: days
      type: integer
  /queries/repository/mimes/campus/CDL:
    template-params:
      WHERE: where ogroup = CDL
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/campus/UCB:
    template-params:
      WHERE: where ogroup = 'UCB'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/campus/UCD:
    template-params:
      WHERE: where ogroup = 'UCD'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/campus/UCI:
    template-params:
      WHERE: where ogroup = 'UCI'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/campus/UCLA:
    template-params:
      WHERE: where ogroup = 'UCLA'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/campus/UCM:
    template-params:
      WHERE: where ogroup = 'UCM'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/campus/UCSB:
    template-params:
      WHERE: where ogroup = 'UCSB'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/campus/UCSC:
    template-params:
      WHERE: where ogroup = 'UCSC'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/campus/UCSD:
    template-params:
      WHERE: where ogroup = 'UCSD'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/campus/UCSF:
    template-params:
      WHERE: where ogroup = 'UCSF'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/campus/Other:
    template-params:
      WHERE: where ogroup = 'Other'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/group/audio:
    template-params:
      WHERE: where mime_group = 'audio'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/group/container:
    template-params:
      WHERE: where mime_group = 'container'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/group/data:
    template-params:
      WHERE: where mime_group = 'data'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/group/geo:
    template-params:
      WHERE: where mime_group = 'geo'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/group/image:
    template-params:
      WHERE: where mime_group = 'image'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/group/software:
    template-params:
      WHERE: where mime_group = 'software'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/group/text:
    template-params:
      WHERE: where mime_group = 'textt'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/group/video:
    template-params:
      WHERE: where mime_group = 'video'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/repository/mimes/group/web:
    template-params:
      WHERE: where mime_group = 'web'
    totals: true
    sql: |
      {{{MIME}}}
  /queries/consistency/mult-colls:
    totals: true
    description: |
      - [Object List](/queries/consistency/mult-colls/objlist)
    sql: |
      {{{MULTCOLLQ}}}
  /queries/consistency/mult-colls/objlist:
    totals: true
    sql: |
      {{{OBJQ}}}
    template-params:
      WHERE: |
        {{{MULTCOLL}}}
  /queries/use-cases/largest-objects:
    totals: true
    sql: |
      {{{OBJSUBQ}}}
    template-params:
      SUBWHERE: |
        select
          inv_object_id
        from
          object_size os
        inner join
          inv.inv_objects oo
        on
          os.inv_object_id = oo.id
        order by
          billable_size desc
  /queries/use-cases/most-files:
    totals: true
    sql: |
      {{{OBJSUBQ}}}
    template-params:
      SUBWHERE: |
        select
          inv_object_id
        from
          object_size os
        inner join
          inv.inv_objects o
        on
          os.inv_object_id = o.id
        order by
          file_count desc
  /queries/use-cases/largest-files:
    totals: true
    sql: |
      {{{OBJSUBQ}}}
    template-params:
      SUBWHERE: |
        select
          inv_object_id
        from
          object_size os
        inner join
          inv.inv_objects o
        on
          os.inv_object_id = o.id
        order by
          max_size desc
  /queries/use-cases/non-ascii-erc-what-mrt-demo:
    totals: true
    sql: |
      {{{OBJSUBQ}}}
    template-params:
      SUBWHERE: |
        select distinct
          o.id as inv_object_id
        from
          inv.inv_objects o
        inner join inv.inv_collections_inv_objects icio
          on o.id = icio.inv_object_id
        inner join inv.inv_collections c
          on icio.inv_collection_id = c.id
        where
          erc_what <> CONVERT(erc_what USING ASCII)
        and
          c.mnemonic = 'mrt-demo'
  /queries/use-cases/long-mime-type-selected-collections:
    totals: true
    sql: |
      {{{OBJSUBQ}}}
    template-params:
      SUBWHERE: |
        select distinct
          o.id as inv_object_id
        from
          inv.inv_objects o
        inner join inv.inv_collections_inv_objects icio
          on o.id = icio.inv_object_id
        inner join inv.inv_collections c
          on icio.inv_collection_id = c.id
        where
          length(mime_type) > 70 and source = 'producer'
        and
          c.mnemonic = 'mrt-demo'
  /queries/use-cases/non-ascii-pathname-mrt-demo:
    totals: true
    sql: |
      {{{OBJSUBQ}}}
    template-params:
      SUBWHERE: |
        select distinct
          f.inv_object_id
        from
          inv.inv_files f
        inner join inv.inv_objects o
          on f.inv_object_id = o.id
        inner join inv.inv_collections_inv_objects icio
          on o.id = icio.inv_object_id
        inner join inv.inv_collections c
          on icio.inv_collection_id = c.id
        where
          pathname <> CONVERT(pathname USING ASCII) and source = 'producer'
        and
          c.mnemonic in (
            'mrt-demo', 'escholarship', 'ucb_lib_cal_cultures', 
            'ucb_lib_dcpp', 'ucb_lib_metcalf', 'ucb_lib_jar',
            'ucb_lib_prechmat', 'ucb_lib_stone_rubbings'
          )
  /queries/use-cases/long-pathname-selected-collections:
    totals: true
    sql: |
      {{{OBJSUBQ}}}
    template-params:
      SUBWHERE: |
        select distinct
          f.inv_object_id
        from
          inv.inv_files f
        inner join inv.inv_objects o
          on f.inv_object_id = o.id
        inner join inv.inv_collections_inv_objects icio
          on o.id = icio.inv_object_id
        inner join inv.inv_collections c
          on icio.inv_collection_id = c.id
        where
          length(SUBSTRING_INDEX(pathname,'/',-1)) > 80 and source = 'producer'
        and
          c.mnemonic in (
            'mrt-demo', 'escholarship', 'ucb_lib_cal_cultures', 
            'ucb_lib_dcpp', 'ucb_lib_metcalf', 'ucb_lib_jar',
            'ucb_lib_prechmat', 'ucb_lib_stone_rubbings'
          )
  /queries/consistency/version-clobber:
    description: |
      - [Object List](/queries/consistency/version-clobber/objlist )
    sql: |
      select
        'Version Clobber (Duplicate Version Num)',
        ifnull(count(distinct inv_object_id), 0),
        case
          when count(*) = 0 then 'PASS'
          else 'FAIL'
        end as status
      from (
        {{{VERCLOBBER}}}
      ) as clobber
      union
      select
        'Version Number Gap',
        ifnull(count(distinct inv_object_id), 0),
        case
          when count(*) = 0 then 'PASS'
          else 'FAIL'
        end as status
      from (
        select
          inv_object_id
        from
          inv.inv_versions
        group by
          inv_object_id
        having
          count(distinct number) != max(number)
      ) as gap
  /queries/consistency/version-clobber/objlist:
    sql: |
      {{{OBJSUBQ}}}
    template-params:
      SUBWHERE: |
        {{{VERCLOBBER}}}
  /queries/consistency/objects-no-local-id:
    description: |
      - [Object List](/queries/consistency/objects-no-local-id/objlist)
    sql: |
      select
        case
          when modified < date_add(now(), interval -1 YEAR)
            then concat(c.mnemonic, ' - Older Than 1 Year')
          when modified < date_add(now(), interval -1 MONTH)
            then concat(c.mnemonic, ' - Older Than 1 Month')
          else
            c.mnemonic
        end as category,
        count(*),
        case
          when count(*) = 0 then 'PASS'
          when c.mnemonic = 'merritt_demo' then 'INFO'
          when modified < date_add(now(), interval -1 YEAR) then 'INFO'
          when modified < date_add(now(), interval -1 MONTH) then 'WARN'
          else 'FAIL'
        end as status
        from inv.inv_objects o
        inner join inv.inv_collections_inv_objects icio
          on o.id = icio.inv_object_id
        inner join inv.inv_collections c
          on icio.inv_collection_id = c.id
        where
          not exists (select 1 from inv.inv_localids loc where o.ark = loc.inv_object_ark)
          and
            o.erc_where != concat(o.ark, ' ; (:unas)')
        group by
          category
        order by
          category
  /queries/consistency/objects-no-local-id/objlist:
    sql: |
      {{{OBJQ}}}
    template-params:
      WHERE: |
        where not exists (
          select
            1
          from
            inv.inv_localids x
          where
            o.ark = x.inv_object_ark
        )
        and
          erc_where != concat(o.ark, ' ; (:unas)')
  /queries/consistency/local-id-no-ark:
    sql: |
      SELECT
        replace(loc.inv_owner_ark, '%2F', '/') as ownark,
        own.name,
        count(*) as count_ids,
        'INFO' as status
      FROM
        inv.inv_localids loc
      LEFT JOIN
        inv.inv_objects o ON o.ark = loc.inv_object_ark
      LEFT JOIN
        inv.inv_owners own ON replace(loc.inv_owner_ark, '%2F', '/') = own.ark
      WHERE
        o.ark IS null
      group by
        ownark, own.name
  /queries/ingest/recent-ingests:
    sql:
      select
        c.id inv_collection_id,
        c.name,
        c.mnemonic,
        (
          select
            max(o.modified)
          from
            inv.inv_objects o
          inner join inv.inv_collections_inv_objects icio
            on o.id = icio.inv_object_id
          where
            c.id = icio.inv_collection_id
        ) as modified
      from
        inv.inv_collections c
      order by
        modified desc
  /queries/repository/last-month/producer-files:
    totals: true
    template-params:
      FIELD: ifnull(sum(ocmud.count_files), 0)
      FILTER: |
        and 
          ocmud.date_added >= date_add(date(now()), INTERVAL -DAYOFWEEK(date(now())) +1 -21 DAY)
    template-sql:
      RANGE: |
        {{{WEEKS}}}
    sql: |
      {{{COLLTOTAL}}}
  /queries/repository/all-time/producer-files:
    totals: true
    template-params:
      FIELD: ifnull(sum(ocmud.count_files), 0)
    template-sql:
      RANGE: |
        {{{YEARS}}}
    sql: |
      {{{COLLTOTAL}}}
  /queries/repository/last-month/file-size:
    totals: true
    template-params:
      FIELD: ifnull(sum(ocmud.billable_size), 0)
      FILTER: |
        and 
          ocmud.date_added >= date_add(date(now()), INTERVAL -DAYOFWEEK(date(now())) +1 -21 DAY)
    template-sql:
      RANGE: |
        {{{WEEKS}}}
    sql: |
      {{{COLLTOTAL}}}
  /queries/repository/all-time/file-size:
    totals: true
    template-params:
      FIELD: ifnull(sum(ocmud.billable_size), 0)
    template-sql:
      RANGE: |
        {{{YEARS}}}
    sql: |
      {{{COLLTOTAL}}}
  /queries/repository/all-time/cuml-file-size:
    totals: true
    template-params:
      FIELD: ifnull(sum(ocmud.billable_size), 0)
    template-sql:
      RANGE: |
        {{{CUMLYEARS}}}
    sql: |
      {{{COLLTOTALCUML}}}
  /queries/repository/all-time/cuml-producer-files:
    totals: true
    template-params:
      FIELD: ifnull(sum(ocmud.count_files), 0)
    template-sql:
      RANGE: |
        {{{CUMLYEARS}}}
    sql: |
      {{{COLLTOTALCUML}}}

